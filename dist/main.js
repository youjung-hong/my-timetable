!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("MyTimetable",[],e):"object"==typeof exports?exports.MyTimetable=e():n.MyTimetable=e()}(self,(()=>(()=>{"use strict";var n={424:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),s=t.n(i)()(r());s.push([n.id,":root {\n  --main-border-color: #dadce0;\n  --main-font-color: #444950;\n  --main-bg-color: #ffffff;\n}\n\n.planner {\n  display: flex;\n  background-color: black;\n  height: 720px;\n}\n.todolist {\n  width: 70%;\n  height: 100%;\n  background-color: red;\n}\n.timetable {\n  width: 100%;\n  height: 100%;\n  background-color: var(--main-bg-color);\n  display: flex;\n  font-family: sans-serif;\n  color: var(--main-font-color);\n  border: 1px solid var(--main-border-color);\n}\n.hours.hour-header {\n  width: 15%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n}\n.hours.hour-header .hour {\n  border-bottom: 1px solid var(--main-border-color);\n  flex-grow: 1;\n  height: 100%;\n  padding: 5px 0;\n}\n.hours.hour-header .hour:last-child {\n  border-bottom: none;\n}\n.contents {\n  position: relative;\n  width: 100%;\n}\n.contents .minutes {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n}\n.contents .minutes .minute {\n  flex-grow: 1;\n  border-left: 1px solid var(--main-border-color);\n}\n.contents .hours {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n}\n.contents .hours .hour {\n  flex-grow: 1;\n  border-bottom: 1px solid var(--main-border-color);\n  position: relative;\n}\n.contents .hours .hour:last-child {\n  border-bottom: none;\n}\n\n.contents .hours .hour .timeline {\n  position: absolute;\n  height: 100%;\n  top: 0;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,4BAA4B;EAC5B,0BAA0B;EAC1B,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,aAAa;AACf;AACA;EACE,UAAU;EACV,YAAY;EACZ,qBAAqB;AACvB;AACA;EACE,WAAW;EACX,YAAY;EACZ,sCAAsC;EACtC,aAAa;EACb,uBAAuB;EACvB,6BAA6B;EAC7B,0CAA0C;AAC5C;AACA;EACE,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,kBAAkB;AACpB;AACA;EACE,iDAAiD;EACjD,YAAY;EACZ,YAAY;EACZ,cAAc;AAChB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,kBAAkB;EAClB,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,aAAa;AACf;AACA;EACE,YAAY;EACZ,+CAA+C;AACjD;AACA;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,YAAY;EACZ,iDAAiD;EACjD,kBAAkB;AACpB;AACA;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,MAAM;AACR",sourcesContent:[":root {\n  --main-border-color: #dadce0;\n  --main-font-color: #444950;\n  --main-bg-color: #ffffff;\n}\n\n.planner {\n  display: flex;\n  background-color: black;\n  height: 720px;\n}\n.todolist {\n  width: 70%;\n  height: 100%;\n  background-color: red;\n}\n.timetable {\n  width: 100%;\n  height: 100%;\n  background-color: var(--main-bg-color);\n  display: flex;\n  font-family: sans-serif;\n  color: var(--main-font-color);\n  border: 1px solid var(--main-border-color);\n}\n.hours.hour-header {\n  width: 15%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n}\n.hours.hour-header .hour {\n  border-bottom: 1px solid var(--main-border-color);\n  flex-grow: 1;\n  height: 100%;\n  padding: 5px 0;\n}\n.hours.hour-header .hour:last-child {\n  border-bottom: none;\n}\n.contents {\n  position: relative;\n  width: 100%;\n}\n.contents .minutes {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n}\n.contents .minutes .minute {\n  flex-grow: 1;\n  border-left: 1px solid var(--main-border-color);\n}\n.contents .hours {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n}\n.contents .hours .hour {\n  flex-grow: 1;\n  border-bottom: 1px solid var(--main-border-color);\n  position: relative;\n}\n.contents .hours .hour:last-child {\n  border-bottom: none;\n}\n\n.contents .hours .hour .timeline {\n  position: absolute;\n  height: 100%;\n  top: 0;\n}"],sourceRoot:""}]);const a=s},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&s[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),s=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(s).concat([i]).join("\n")}return[e].join("\n")}},548:(n,e,t)=>{t.r(e),t.d(e,{default:()=>v});var o=t(379),r=t.n(o),i=t(795),s=t.n(i),a=t(569),l=t.n(a),c=t(565),A=t.n(c),d=t(216),u=t.n(d),m=t(589),h=t.n(m),p=t(424),f={};f.styleTagTransform=h(),f.setAttributes=A(),f.insert=l().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=u(),r()(p.Z,f);const v=p.Z&&p.Z.locals?p.Z.locals:void 0},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},s=[],a=0;a<n.length;a++){var l=n[a],c=o.base?l[0]+o.base:l[0],A=i[c]||0,d="".concat(c," ").concat(A);i[c]=A+1;var u=t(d),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var h=r(m,o);o.byIndex=a,e.splice(a,0,{identifier:d,updater:h,references:1})}s.push(d)}return s}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var s=0;s<i.length;s++){var a=t(i[s]);e[a].references--}for(var l=o(n,r),c=0;c<i.length;c++){var A=t(i[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=l}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},427:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Timeline=void 0,e.Timeline=class{constructor(n){this.id=n.id,this.color=n.color,this.startAt=new Date(n.startAt),this.endAt=new Date(n.endAt),this.meta=n.meta}}},748:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Timetable=void 0;const o=t(301),r=t(427);e.Timetable=class{constructor(n,e,t){this.rootElement=n,this.hourElements=[],this.timelines=(e||[]).map((n=>new r.Timeline(n))),this.options={startHour:(t||{}).startHour||0},this.init()}init(){this.rootElement.innerHTML=(0,o.TIMETABLE_INNERHTML)(this.options.startHour||0);const n=this.rootElement.querySelectorAll(".contents .hours div.hour");this.hourElements=[].slice.call(n),this.timelines.forEach((n=>this.draw(n)))}draw(n){var e;const t=n.startAt.getHours(),r=n.endAt.getHours();for(let i=t;i<=r;i+=1){const s=t===i?n.startAt.getMinutes():0,a=r===i?n.endAt.getMinutes():60;if(s===a)break;const l=s/60*100,c=(a-s)/60*100,A=document.createElement("div");A.innerHTML=(0,o.TIMELINE_INNERHTML)(n,l+"%",c+"%"),null===(e=this.hourElements[i-this.options.startHour])||void 0===e||e.append(A)}}getTimelines(){return this.timelines}getTimeline(n){return this.timelines.find((e=>e.id===n))}addTimelines(n){n.forEach((n=>this.addTimeline(n)))}addTimeline(n){this.removeTimeline(n.id);const e=new r.Timeline(n);this.timelines.push(e),this.timelines.sort(((n,e)=>n.id-e.id)),this.draw(e)}removeTimelines(n){n.forEach((n=>this.removeTimeline(n)))}removeTimeline(n){const e=this.timelines.findIndex((e=>e.id===n));-1!==e&&(this.timelines.splice(e,1),this.rootElement.querySelectorAll(`.timeline[data-timeline-id="${n}"]`).forEach((n=>{n.parentElement.remove()})))}}},301:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TIMELINE_INNERHTML=e.TIMETABLE_INNERHTML=void 0,e.TIMETABLE_INNERHTML=(n=0)=>{const e=n%24,t=[];for(let n=0;n<24;n+=1)t.push((e+n)%24);return'<div class="timetable"><div class="hours hour-header">'+t.map((n=>`<div class="hour">${n}</div>`)).join("")+'</div><div class="contents">\n            <div class="minutes">\n                <div class="minute minute-0"></div>\n                <div class="minute minute-10"></div>\n                <div class="minute minute-20"></div>\n                <div class="minute minute-30"></div>\n                <div class="minute minute-40"></div>\n                <div class="minute minute-50"></div>\n            </div><div class="hours">'+t.map((n=>`<div class="hour" data-hour="${n}"></div>`)).join("")+"</div></div></div>"},e.TIMELINE_INNERHTML=(n,e,t)=>`<div class="timeline" style="left: ${e}; width: ${t}; background-color: ${n.color};" data-timeline-id="${n.id}"></div>`}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var o={};return(()=>{var n=o;const e=t(748);t(548),n.default=e.Timetable})(),o.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,